<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.e4.core.macros" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.eclipse.e4.core.macros" id="macroContextListeners" name="Listeners for changes on the macro context"/>
      </appinfo>
      <documentation>
         Allows for other plugins to register listeners which must be notified of changes in the macro context.

For instance, to add listeners to do recording of keystrokes or disabling commands which are not allowed during macro record/playback.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <choice minOccurs="1" maxOccurs="unbounded">
            <element ref="macroListener"/>
         </choice>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="macroListener">
      <complexType>
         <attribute name="class" type="string">
            <annotation>
               <documentation>
                  A listener for changes in the macro context (i.e.: macro record or playback started or stopped).

Listeners should be added to the macro context when in order to properly record or playback a macro some pre/post work must be done.

For instance, an interceptor is added to the keybindings dispatcher in order to blacklist commands being triggered by the user when in record mode.

Note: it&apos;s lazily created the first time the macro context changes and the same instance is kept alive afterwards.

Note: it&apos;s also possible to programatically add an IMacroContextListener to the EMacroContextService (so, existing instances, such as the text editor can act upon starting a macro record session and start recording keystrokes or disable code-completion if it can&apos;t deal with playing it back).
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.e4.core.macros.IMacroContextListener"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         1.0.0
      </documentation>
   </annotation>





</schema>
